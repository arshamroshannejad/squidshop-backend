// Package api Code generated by swaggo/swag. DO NOT EDIT
package api

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Arsham Roshannejad",
            "url": "arshamroshannejad.ir",
            "email": "arshamdev2001@gmail.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://www.mit.edu/~amini/LICENSE.md"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth": {
            "post": {
                "description": "if user exists it will log in else register. it also sends otp code to user phone",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "auth endpoint (register | login)",
                "parameters": [
                    {
                        "description": "phone for register or login",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_arshamroshannejad_squidshop-backend_internal_entity.UserAuthRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/auth/verify": {
            "post": {
                "description": "verify otp code and return access token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "verify auth endpoint",
                "parameters": [
                    {
                        "description": "phone and code for register or login",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_arshamroshannejad_squidshop-backend_internal_entity.UserVerifyAuthRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/category": {
            "get": {
                "description": "get all categories in db",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "get categories endpoint",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_arshamroshannejad_squidshop-backend_internal_model.Category"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "create new category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "create category endpoint",
                "parameters": [
                    {
                        "description": "category data for create",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_arshamroshannejad_squidshop-backend_internal_entity.CategoryCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/category/exists": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "check category exists with name and slug. at least one of them must be set",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "exists category endpoint",
                "parameters": [
                    {
                        "type": "string",
                        "description": "category name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "category slug",
                        "name": "slug",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/category/{id}": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "update category by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "update category endpoint",
                "parameters": [
                    {
                        "type": "string",
                        "description": "category id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "category data for update",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_arshamroshannejad_squidshop-backend_internal_entity.CategoryUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "delete category by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "delete category endpoint",
                "parameters": [
                    {
                        "type": "string",
                        "description": "category id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/product": {
            "get": {
                "description": "get all products in db",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "get all products endpoint",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_arshamroshannejad_squidshop-backend_internal_model.Product"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "create product",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "create product endpoint",
                "parameters": [
                    {
                        "description": "product data for create",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_arshamroshannejad_squidshop-backend_internal_entity.ProductCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/product/comment/like/{id}": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "update product comment like",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product Comment Like"
                ],
                "summary": "update product comment like endpoint",
                "parameters": [
                    {
                        "type": "string",
                        "description": "comment id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "product comment like data for update",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_arshamroshannejad_squidshop-backend_internal_entity.PostCommentLikeCreateUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "create product comment like",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product Comment Like"
                ],
                "summary": "create product comment like endpoint",
                "parameters": [
                    {
                        "type": "string",
                        "description": "comment id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "product comment like data for create",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_arshamroshannejad_squidshop-backend_internal_entity.PostCommentLikeCreateUpdate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "delete product comment like",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product Comment Like"
                ],
                "summary": "delete product comment like endpoint",
                "parameters": [
                    {
                        "type": "string",
                        "description": "comment id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/product/comment/{id}": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "update product comment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product Comment"
                ],
                "summary": "update product comment endpoint",
                "parameters": [
                    {
                        "type": "string",
                        "description": "product comment id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "product comment data for update",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_arshamroshannejad_squidshop-backend_internal_entity.ProductCommentUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "create product comment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product Comment"
                ],
                "summary": "create product comment endpoint",
                "parameters": [
                    {
                        "type": "string",
                        "description": "product id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "product comment data for create",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_arshamroshannejad_squidshop-backend_internal_entity.ProductCommentCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "delete product comment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product Comment"
                ],
                "summary": "delete product comment endpoint",
                "parameters": [
                    {
                        "type": "string",
                        "description": "product comment id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/product/exists/{slug}": {
            "get": {
                "description": "check if product exists by slug",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "exists product endpoint",
                "parameters": [
                    {
                        "type": "string",
                        "description": "product slug",
                        "name": "slug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/product/id/{id}": {
            "get": {
                "description": "get product by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "get product by id endpoint",
                "parameters": [
                    {
                        "type": "string",
                        "description": "product id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_arshamroshannejad_squidshop-backend_internal_model.Product"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/product/image/{id}": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "create product image by product id",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product Image"
                ],
                "summary": "create product image endpoint",
                "parameters": [
                    {
                        "type": "string",
                        "description": "product id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "product images",
                        "name": "images",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/product/rating/{id}": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "create or update product rating",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product Rating"
                ],
                "summary": "create or update product rating endpoint",
                "parameters": [
                    {
                        "type": "string",
                        "description": "product id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "product rating data for create or update",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_arshamroshannejad_squidshop-backend_internal_entity.ProductRatingRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "delete product rating",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product Rating"
                ],
                "summary": "delete product rating endpoint",
                "parameters": [
                    {
                        "type": "string",
                        "description": "product id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/product/slug/{slug}": {
            "get": {
                "description": "get product by slug",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "get product by slug endpoint",
                "parameters": [
                    {
                        "type": "string",
                        "description": "product slug",
                        "name": "slug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_arshamroshannejad_squidshop-backend_internal_model.Product"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/product/{id}": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "update product by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "update product endpoint",
                "parameters": [
                    {
                        "type": "string",
                        "description": "product id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "product data for update",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_arshamroshannejad_squidshop-backend_internal_entity.ProductUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "delete product by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "delete product endpoint",
                "parameters": [
                    {
                        "type": "string",
                        "description": "product id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/user/profile": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "get user profile and info based on jwt token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "user profile endpoint",
                "responses": {
                    "200": {
                        "description": "user profile data",
                        "schema": {
                            "$ref": "#/definitions/github_com_arshamroshannejad_squidshop-backend_internal_model.User"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        }
    },
    "definitions": {
        "github_com_arshamroshannejad_squidshop-backend_internal_entity.CategoryCreateRequest": {
            "type": "object",
            "required": [
                "name",
                "slug"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1,
                    "example": "Electronics"
                },
                "parent_id": {
                    "type": "integer",
                    "minimum": 1,
                    "example": 1
                },
                "slug": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1,
                    "example": "electronics"
                }
            }
        },
        "github_com_arshamroshannejad_squidshop-backend_internal_entity.CategoryUpdateRequest": {
            "type": "object",
            "required": [
                "name",
                "slug"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1,
                    "example": "Electronics"
                },
                "parent_id": {
                    "type": "integer",
                    "minimum": 1,
                    "example": 1
                },
                "slug": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1,
                    "example": "electronics"
                }
            }
        },
        "github_com_arshamroshannejad_squidshop-backend_internal_entity.PostCommentLikeCreateUpdate": {
            "type": "object",
            "required": [
                "vote"
            ],
            "properties": {
                "vote": {
                    "type": "integer",
                    "enum": [
                        1,
                        -1
                    ],
                    "example": 1
                }
            }
        },
        "github_com_arshamroshannejad_squidshop-backend_internal_entity.ProductCommentCreateRequest": {
            "type": "object",
            "required": [
                "comment"
            ],
            "properties": {
                "comment": {
                    "type": "string",
                    "minLength": 1,
                    "example": "nice product"
                },
                "parent_id": {
                    "type": "integer",
                    "example": 12
                }
            }
        },
        "github_com_arshamroshannejad_squidshop-backend_internal_entity.ProductCommentUpdateRequest": {
            "type": "object",
            "required": [
                "comment"
            ],
            "properties": {
                "comment": {
                    "type": "string",
                    "minLength": 1,
                    "example": "nice product"
                }
            }
        },
        "github_com_arshamroshannejad_squidshop-backend_internal_entity.ProductCreateRequest": {
            "type": "object",
            "required": [
                "category_id",
                "description",
                "name",
                "price",
                "quantity",
                "short_description",
                "slug"
            ],
            "properties": {
                "category_id": {
                    "type": "integer",
                    "minimum": 1,
                    "example": 1
                },
                "description": {
                    "type": "string",
                    "minLength": 1,
                    "example": "lorem ipsum dolor sit amet, consectetur adipiscing elit"
                },
                "name": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1,
                    "example": "call of duty black ops 4"
                },
                "price": {
                    "type": "number",
                    "minimum": 1,
                    "example": 23400.23
                },
                "quantity": {
                    "type": "integer",
                    "minimum": 1,
                    "example": 10
                },
                "short_description": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1,
                    "example": "lorem ipsum dolor sit amet, consectetur adipiscing elit"
                },
                "slug": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1,
                    "example": "call-of-duty-black-ops-4"
                }
            }
        },
        "github_com_arshamroshannejad_squidshop-backend_internal_entity.ProductRatingRequest": {
            "type": "object",
            "required": [
                "rate"
            ],
            "properties": {
                "rate": {
                    "type": "integer",
                    "enum": [
                        1,
                        2,
                        3,
                        4,
                        5
                    ],
                    "example": 5
                }
            }
        },
        "github_com_arshamroshannejad_squidshop-backend_internal_entity.ProductUpdateRequest": {
            "type": "object",
            "required": [
                "category_id",
                "description",
                "name",
                "price",
                "quantity",
                "short_description",
                "slug"
            ],
            "properties": {
                "category_id": {
                    "type": "integer",
                    "minimum": 1,
                    "example": 1
                },
                "description": {
                    "type": "string",
                    "minLength": 1,
                    "example": "lorem ipsum dolor sit amet, consectetur adipiscing elit"
                },
                "name": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1,
                    "example": "call of duty black ops 4"
                },
                "price": {
                    "type": "number",
                    "minimum": 1,
                    "example": 23400.23
                },
                "quantity": {
                    "type": "integer",
                    "minimum": 1,
                    "example": 10
                },
                "short_description": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1,
                    "example": "lorem ipsum dolor sit amet, consectetur adipiscing elit"
                },
                "slug": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1,
                    "example": "call-of-duty-black-ops-4"
                }
            }
        },
        "github_com_arshamroshannejad_squidshop-backend_internal_entity.UserAuthRequest": {
            "type": "object",
            "required": [
                "phone"
            ],
            "properties": {
                "phone": {
                    "type": "string",
                    "maxLength": 13,
                    "minLength": 1,
                    "example": "+989029266635"
                }
            }
        },
        "github_com_arshamroshannejad_squidshop-backend_internal_entity.UserVerifyAuthRequest": {
            "type": "object",
            "required": [
                "code",
                "phone"
            ],
            "properties": {
                "code": {
                    "type": "string",
                    "example": "123456"
                },
                "phone": {
                    "type": "string",
                    "example": "+989029266635"
                }
            }
        },
        "github_com_arshamroshannejad_squidshop-backend_internal_model.Category": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": "1"
                },
                "name": {
                    "type": "string",
                    "example": "Laptop"
                },
                "slug": {
                    "type": "string",
                    "example": "laptop"
                },
                "sub_categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_arshamroshannejad_squidshop-backend_internal_model.Category"
                    }
                }
            }
        },
        "github_com_arshamroshannejad_squidshop-backend_internal_model.Product": {
            "type": "object",
            "properties": {
                "average_rating": {
                    "type": "number",
                    "example": 4.5
                },
                "category_id": {
                    "type": "string",
                    "example": "1"
                },
                "created_at": {
                    "type": "string",
                    "example": "2025-09-12T00:12:12.123456789Z"
                },
                "description": {
                    "type": "string",
                    "example": "Call of Duty black ops 4 is a first-person shooter game"
                },
                "id": {
                    "type": "string",
                    "example": "1"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_arshamroshannejad_squidshop-backend_internal_model.ProductImage"
                    }
                },
                "name": {
                    "type": "string",
                    "example": "Call of Duty black ops 4"
                },
                "price": {
                    "type": "number",
                    "example": 19.99
                },
                "quantity": {
                    "type": "integer",
                    "example": 10
                },
                "rating_count": {
                    "type": "integer",
                    "example": 12
                },
                "short_description": {
                    "type": "string",
                    "example": "Call of Duty black ops 4 is a first-person shooter game"
                },
                "slug": {
                    "type": "string",
                    "example": "call-of-duty-black-ops-4"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2025-09-12T00:12:12.123456789Z"
                }
            }
        },
        "github_com_arshamroshannejad_squidshop-backend_internal_model.ProductImage": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": "1"
                },
                "image_url": {
                    "type": "string",
                    "example": "https://example.com/image.jpg"
                },
                "is_main": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "github_com_arshamroshannejad_squidshop-backend_internal_model.User": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2025-09-12T00:12:12.123456789Z"
                },
                "id": {
                    "type": "string",
                    "example": "1"
                },
                "is_admin": {
                    "type": "boolean",
                    "example": false
                },
                "phone": {
                    "type": "string",
                    "example": "+989029266635"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "0.1.0",
	Host:             "api.squidshop.ir",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "squidshop-backend",
	Description:      "Api for managing product and everything related to E-commerce shop",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
